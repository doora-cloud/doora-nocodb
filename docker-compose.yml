version: "3.9"

services:
  app:
    image: nocodb/nocodb:latest
    restart: always
    environment:
      NC_PUBLIC_URL: ${PUBLIC_URL}
      NC_ADMIN_EMAIL: ${ADMIN_EMAIL}
      NC_ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      NC_DB: pg://db:${DB_PORT}?u=${DB_USER}&p=${DB_PASSWORD}&d=${DB_NAME}
      NC_REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379
      DB_QUERY_LIMIT_DEFAULT: ${DB_QUERY_LIMIT_DEFAULT:-25}
      DB_QUERY_LIMIT_MAX: ${DB_QUERY_LIMIT_MAX:-1000}
      DB_QUERY_LIMIT_MIN: ${DB_QUERY_LIMIT_MIN:-1}
    volumes:
      - ${BASE_VOLUME}/data:/usr/app/data
    expose:
      - 8080
    networks:
      - internal
      - nginx
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: ${LIMIT_NOCODB_CPU:-1}
          memory: ${LIMIT_NOCODB_RAM:-1G}
        reservations:
          cpus: "0.2"
          memory: 128M
  db:
    image: postgres:14-alpine
    restart: always
    environment:
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
    expose:
      - 5432
    volumes:
      - ${BASE_VOLUME}/postgresql:/var/lib/postgresql/data
    networks:
      - internal
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: ${LIMIT_DB_CPU:-1}
          memory: ${LIMIT_DB_RAM:-256M}
        reservations:
          cpus: "0.1"
          memory: 16M
  redis:
    image: redis:7-alpine
    restart: always
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    volumes:
      - ${BASE_VOLUME}/redis:/data
    expose:
      - 6379
    networks:
      - internal
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      retries: 3
    deploy:
      resources:
        limits:
          cpus: ${LIMIT_REDIS_CPU:-1}
          memory: ${LIMIT_REDIS_RAM:-512M}
        reservations:
          cpus: "0.1"
          memory: 16M
  db-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    restart: always
    environment:
      DATA_SOURCE_NAME: postgresql://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}?sslmode=disable
    expose:
      - 9187
    networks:
      - internal
      - monitoring
    depends_on:
      db:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: ${LIMIT_CPU_DB_EXPORTER:-0.2}
          memory: ${LIMIT_RAM_DB_EXPORTER:-128M}
        reservations:
          cpus: "0.1"
          memory: 10M

networks:
  internal:
  nginx:
    external: true
  monitoring:
    external: true
